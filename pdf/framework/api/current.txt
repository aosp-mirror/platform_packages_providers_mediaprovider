// Signature format: 2.0
package android.graphics.pdf {

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class LoadParams {
    method @Nullable public String getPassword();
  }

  public static final class LoadParams.Builder {
    ctor public LoadParams.Builder();
    method @NonNull public android.graphics.pdf.LoadParams build();
    method @NonNull public android.graphics.pdf.LoadParams.Builder setPassword(@Nullable String);
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class PdfRendererPreV implements java.lang.AutoCloseable {
    ctor public PdfRendererPreV(@NonNull android.os.ParcelFileDescriptor) throws java.io.IOException;
    ctor public PdfRendererPreV(@NonNull android.os.ParcelFileDescriptor, @NonNull android.graphics.pdf.LoadParams) throws java.io.IOException;
    method public void close();
    method public int getDocumentLinearizationType();
    method public int getPageCount();
    method @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public int getPdfFormType();
    method @NonNull public android.graphics.pdf.PdfRendererPreV.Page openPage(int);
    method public void write(@NonNull android.os.ParcelFileDescriptor, boolean) throws java.io.IOException;
    field public static final int DOCUMENT_LINEARIZED_TYPE_LINEARIZED = 2; // 0x2
    field public static final int DOCUMENT_LINEARIZED_TYPE_NON_LINEARIZED = 1; // 0x1
    field public static final int DOCUMENT_LINEARIZED_TYPE_UNKNOWN = 0; // 0x0
    field @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public static final int PDF_FORM_TYPE_ACRO_FORM = 1; // 0x1
    field @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public static final int PDF_FORM_TYPE_NONE = 0; // 0x0
    field @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public static final int PDF_FORM_TYPE_XFA_FOREGROUND = 3; // 0x3
    field @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public static final int PDF_FORM_TYPE_XFA_FULL = 2; // 0x2
  }

  public final class PdfRendererPreV.Page implements java.lang.AutoCloseable {
    method @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") @NonNull public java.util.List<android.graphics.Rect> applyEdit(@NonNull android.graphics.pdf.models.FormEditRecord);
    method @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") @NonNull public java.util.List<android.graphics.pdf.models.FormEditRecord> applyEdits(@NonNull java.util.List<android.graphics.pdf.models.FormEditRecord>);
    method public void close();
    method @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") @NonNull public android.graphics.pdf.models.FormWidgetInfo getFormWidgetInfoAtIndex(int);
    method @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") @NonNull public android.graphics.pdf.models.FormWidgetInfo getFormWidgetInfoAtPosition(int, int);
    method @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") @NonNull public java.util.List<android.graphics.pdf.models.FormWidgetInfo> getFormWidgetInfos();
    method @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") @NonNull public java.util.List<android.graphics.pdf.models.FormWidgetInfo> getFormWidgetInfos(@NonNull java.util.Set<java.lang.Integer>);
    method @NonNull public java.util.List<android.graphics.pdf.content.PdfPageGotoLinkContent> getGotoLinks();
    method public int getHeight();
    method @NonNull public java.util.List<android.graphics.pdf.content.PdfPageImageContent> getImageContents();
    method public int getIndex();
    method @NonNull public java.util.List<android.graphics.pdf.content.PdfPageLinkContent> getLinkContents();
    method @NonNull public java.util.List<android.graphics.pdf.content.PdfPageTextContent> getTextContents();
    method public int getWidth();
    method public void render(@NonNull android.graphics.Bitmap, @Nullable android.graphics.Rect, @Nullable android.graphics.Matrix, @NonNull android.graphics.pdf.RenderParams);
    method @NonNull public java.util.List<android.graphics.pdf.models.PageMatchBounds> searchText(@NonNull String);
    method @Nullable public android.graphics.pdf.models.selection.PageSelection selectContent(@NonNull android.graphics.pdf.models.selection.SelectionBoundary, @NonNull android.graphics.pdf.models.selection.SelectionBoundary, boolean);
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class RenderParams {
    method public int getRenderFlags();
    method public int getRenderMode();
    field public static final int FLAG_RENDER_HIGHLIGHT_ANNOTATIONS = 4; // 0x4
    field public static final int FLAG_RENDER_TEXT_ANNOTATIONS = 2; // 0x2
  }

  public static final class RenderParams.Builder {
    ctor public RenderParams.Builder(int);
    method @NonNull public android.graphics.pdf.RenderParams build();
    method @NonNull public android.graphics.pdf.RenderParams.Builder setRenderFlags(int);
    method @NonNull public android.graphics.pdf.RenderParams.Builder setRenderFlags(int, int);
  }

}

package android.graphics.pdf.content {

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public class PdfPageGotoLinkContent {
    ctor public PdfPageGotoLinkContent(@NonNull java.util.List<android.graphics.Rect>, @NonNull android.graphics.pdf.content.PdfPageGotoLinkContent.Destination);
    method @NonNull public java.util.List<android.graphics.Rect> getBounds();
    method @NonNull public android.graphics.pdf.content.PdfPageGotoLinkContent.Destination getDestination();
  }

  public static class PdfPageGotoLinkContent.Destination {
    ctor public PdfPageGotoLinkContent.Destination(int, float, float, float);
    method public int getPageNumber();
    method public float getXCoordinate();
    method public float getYCoordinate();
    method public float getZoom();
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class PdfPageImageContent {
    ctor public PdfPageImageContent(@NonNull String);
    method @NonNull public String getAltText();
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class PdfPageLinkContent {
    ctor public PdfPageLinkContent(@NonNull java.util.List<android.graphics.Rect>, @NonNull android.net.Uri);
    method @NonNull public java.util.List<android.graphics.Rect> getBounds();
    method @NonNull public android.net.Uri getUri();
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class PdfPageTextContent {
    ctor public PdfPageTextContent(@NonNull String);
    method @NonNull public String getText();
  }

}

package android.graphics.pdf.models {

  @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public final class ChoiceOption implements android.os.Parcelable {
    ctor public ChoiceOption(@NonNull String, boolean);
    method public int describeContents();
    method @NonNull public String getLabel();
    method public boolean isSelected();
    method public void setLabel(@NonNull String);
    method public void setSelected(boolean);
    method public void writeToParcel(@NonNull android.os.Parcel, int);
    field @NonNull public static final android.os.Parcelable.Creator<android.graphics.pdf.models.ChoiceOption> CREATOR;
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public final class FormEditRecord implements android.os.Parcelable {
    method public int describeContents();
    method @Nullable public android.graphics.Point getClickPoint();
    method public int getPageNumber();
    method @NonNull public java.util.Set<java.lang.Integer> getSelectedIndices();
    method @Nullable public String getText();
    method public int getType();
    method public int getWidgetIndex();
    method public void writeToParcel(@NonNull android.os.Parcel, int);
    field @NonNull public static final android.os.Parcelable.Creator<android.graphics.pdf.models.FormEditRecord> CREATOR;
    field public static final int EDIT_TYPE_CLICK = 0; // 0x0
    field public static final int EDIT_TYPE_SET_INDICES = 1; // 0x1
    field public static final int EDIT_TYPE_SET_TEXT = 2; // 0x2
  }

  public static final class FormEditRecord.Builder {
    ctor public FormEditRecord.Builder(int, int, int);
    method @NonNull public android.graphics.pdf.models.FormEditRecord build();
    method @NonNull public android.graphics.pdf.models.FormEditRecord.Builder setClickPoint(@Nullable android.graphics.Point);
    method @NonNull public android.graphics.pdf.models.FormEditRecord.Builder setSelectedIndices(@Nullable java.util.Set<java.lang.Integer>);
    method @NonNull public android.graphics.pdf.models.FormEditRecord.Builder setText(@Nullable String);
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_form_filling") public final class FormWidgetInfo implements android.os.Parcelable {
    method public int describeContents();
    method @Nullable public String getAccessibilityLabel();
    method @NonNull public java.util.List<android.graphics.pdf.models.ChoiceOption> getChoiceOptions();
    method public float getFontSize();
    method public int getMaxLength();
    method @Nullable public String getTextValue();
    method public int getWidgetIndex();
    method @NonNull public android.graphics.Rect getWidgetRect();
    method public int getWidgetType();
    method public boolean isEditableText();
    method public boolean isMultiLineText();
    method public boolean isMultiSelect();
    method public boolean isReadOnly();
    method public void writeToParcel(@NonNull android.os.Parcel, int);
    field @NonNull public static final android.os.Parcelable.Creator<android.graphics.pdf.models.FormWidgetInfo> CREATOR;
    field public static final int WIDGET_TYPE_CHECKBOX = 2; // 0x2
    field public static final int WIDGET_TYPE_COMBOBOX = 4; // 0x4
    field public static final int WIDGET_TYPE_LISTBOX = 5; // 0x5
    field public static final int WIDGET_TYPE_PUSHBUTTON = 1; // 0x1
    field public static final int WIDGET_TYPE_RADIOBUTTON = 3; // 0x3
    field public static final int WIDGET_TYPE_SIGNATURE = 7; // 0x7
    field public static final int WIDGET_TYPE_TEXTFIELD = 6; // 0x6
    field public static final int WIDGET_TYPE_UNKNOWN = 0; // 0x0
  }

  public static final class FormWidgetInfo.Builder {
    ctor public FormWidgetInfo.Builder(int, int, @NonNull android.graphics.Rect, @NonNull String, @NonNull String);
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo build();
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo.Builder setChoiceOptions(@NonNull java.util.List<android.graphics.pdf.models.ChoiceOption>);
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo.Builder setEditableText(boolean);
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo.Builder setFontSize(float);
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo.Builder setMaxLength(int);
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo.Builder setMultiLineText(boolean);
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo.Builder setMultiSelect(boolean);
    method @NonNull public android.graphics.pdf.models.FormWidgetInfo.Builder setReadOnly(boolean);
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class PageMatchBounds {
    ctor public PageMatchBounds(@NonNull java.util.List<android.graphics.Rect>, int);
    method @NonNull public java.util.List<android.graphics.Rect> getBounds();
    method public int getTextStartIndex();
  }

}

package android.graphics.pdf.models.selection {

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class PageSelection {
    ctor public PageSelection(int, @NonNull android.graphics.pdf.models.selection.SelectionBoundary, @NonNull android.graphics.pdf.models.selection.SelectionBoundary, @NonNull java.util.List<android.graphics.pdf.models.selection.TextSelection>);
    ctor public PageSelection(int, @NonNull android.graphics.pdf.models.selection.SelectionBoundary, @NonNull android.graphics.pdf.models.selection.SelectionBoundary, @NonNull java.util.List<android.graphics.pdf.models.selection.TextSelection>, boolean);
    method @NonNull public android.graphics.pdf.models.selection.SelectionBoundary getLeft();
    method public int getPage();
    method @NonNull public android.graphics.pdf.models.selection.SelectionBoundary getRight();
    method @NonNull public java.util.List<android.graphics.pdf.models.selection.TextSelection> getTextSelections();
    method public boolean isRtl();
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public class SelectionBoundary {
    ctor public SelectionBoundary(int);
    ctor public SelectionBoundary(@NonNull android.graphics.Point);
    method public int getIndex();
    method @Nullable public android.graphics.Point getPoint();
  }

  @FlaggedApi("android.graphics.pdf.flags.enable_pdf_viewer") public final class TextSelection {
    ctor public TextSelection(@NonNull java.util.List<android.graphics.Rect>, @NonNull android.graphics.pdf.content.PdfPageTextContent);
    method @NonNull public android.graphics.pdf.content.PdfPageTextContent getSelectedTextContents();
    method @NonNull public java.util.List<android.graphics.Rect> getSelectionBounds();
  }

}

