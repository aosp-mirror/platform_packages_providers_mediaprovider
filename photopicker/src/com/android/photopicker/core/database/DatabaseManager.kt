/*
 * Copyright 2024 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.android.photopicker.core.database

/**
 * Interface for the wrapper around the [PhotopickerDatabase] to allow a prod / test implementation
 * to be provided via Hilt.
 *
 * [DatabaseManager] wraps the implemented [PhotopickerDatabase] and provides access to the
 * generated Dao classes generated by the [Room] library. This ensures a single instance of
 * [PhotopickerDatabase] throughout the application, and consumers (read or write) should only
 * access the database through the class that implements this interface.
 *
 * @see [DatabaseManagerImpl]
 * @see [DatabaseManagerTestImpl]
 */
interface DatabaseManager {

    /**
     * Acquires a Dao for use in reading/writing to the [PhotopickerDatabase].
     *
     * @param <T> The type of the Dao to be acquired.
     * @return the requested Dao, or throws [IllegalArgumentException] if the type is not
     *   implemented.
     */
    fun <T> acquireDao(daoClass: Class<T>): T {
        throw IllegalArgumentException("Cannot acquire ${daoClass.simpleName} from DatabaseManager")
    }
}
